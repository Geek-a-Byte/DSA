#include<stdio.h>
#include<stdlib.h>

struct node{
    int val;
    struct node *next;


};

void printlist(struct node *headptr)

{
    struct node *temp=headptr;

     while(temp!=NULL)    ///Loop will go on until it reaches the last node
    {
        ///Print the value of the head node
        printf("%d\n",temp->val);
        temp=temp->next;      ///Setting the head node equal  to the next node
    }

}


void deletenode(struct node *headptr,int n)
{
    struct node *p,*q;
    q=headptr;
    p=headptr->next;
    if(q->val==n)    ///first node
    {
        headptr=p;
        //delete(q);
        printlist(headptr);
    }

    else{
        while(p->val!=n)
        {
            p=p->next;
            q=q->next;

        }

        ///there are two option
        if(p->next==NULL) ///LAst Node
        {
            q->next=NULL;
            //delete(p);
            printlist(headptr);
        }

        else{

            q->next=p->next;
            //delete(p);
            printlist(headptr);
        }
    }
}












int main()
{
    struct node *node1 = (struct node*)malloc(sizeof(struct node));
    struct node *node2 = (struct node*)malloc(sizeof(struct node));
    struct node *node3 = (struct node*)malloc(sizeof(struct node));
    struct node *node4 = (struct node*)malloc(sizeof(struct node));

    ///Allocating memory for head node
    struct node *head = (struct node*)malloc(sizeof(struct node));
    ///Setting the values of the nodes
    node1->val=10;
    node2->val=20;
    node3->val=30;
    node4->val=40;

    ///Setting the head equal to the first node
    head=node1;

    ///Referencing next nodes
    node1->next=node2;
    node2->next=node3;
    node3->next=node4;
    node4->next=NULL;   ///Thus this is the last element since it has no next node reference now

    //printf("%d\n",node1->val);
    //printf("%d\n",node2->val);
    //printf("%d\n",node3->val);

    ///Calling the printing function
    printlist(head);

    int n;

    printf("Enter the delete number:");
    scanf("%d",&n);
    deletenode(head,n);
}



////////////////////////////////

#include<stdio.h>
#include<stdlib.h>

struct node{
    int val;
    struct node *next;


};

void printlist(struct node *headptr)

{
    struct node *temp=headptr;

     while(temp!=NULL)    ///Loop will go on until it reaches the last node
    {
        ///Print the value of the head node
        printf("%d\n",temp->val);
        temp=temp->next;      ///Setting the head node equal  to the next node
    }

}

void insertfirst(struct node *headptr,int value)
{
    struct node *newnode =(struct node*)malloc(sizeof(struct node));

    ///Setting its value
    newnode->val=value;
    newnode->next =headptr;
    headptr = newnode;
    printlist(headptr);

}

void insertlast(struct node *headptr,int value)
{
     struct node *newnode =(struct node*)malloc(sizeof(struct node));
     struct node *temp=headptr;

     while(temp->next!=NULL)
     {
         temp=temp->next;

     }
     newnode->val=value;
     temp->next=newnode;
     newnode->next=NULL;
     printlist(headptr);





}

void insertany(struct node *headptr,int value,int new_value)
{
     struct node *newnode =(struct node*)malloc(sizeof(struct node));
      struct node *store =(struct node*)malloc(sizeof(struct node));
     struct node *temp=headptr;

     while(temp->val!=value)
     {
         temp=temp->next;

     }
     newnode->val=new_value;
     store=temp->next;
     temp->next=newnode;
     newnode->next=store;
     printlist(headptr);




}
int main()
{
    struct node *node1 = (struct node*)malloc(sizeof(struct node));
    struct node *node2 = (struct node*)malloc(sizeof(struct node));
    struct node *node3 = (struct node*)malloc(sizeof(struct node));
    struct node *node4 = (struct node*)malloc(sizeof(struct node));

    ///Allocating memory for head node
    struct node *head = (struct node*)malloc(sizeof(struct node));
    ///Setting the values of the nodes
    node1->val=10;
    node2->val=20;
    node3->val=30;
    node4->val=40;

    ///Setting the head equal to the first node
    head=node1;

    ///Referencing next nodes
    node1->next=node2;
    node2->next=node3;
    node3->next=node4;
    node4->next=NULL;   ///Thus this is the last element since it has no next node reference now

    //printf("%d\n",node1->val);
    //printf("%d\n",node2->val);
    //printf("%d\n",node3->val);

    ///Calling the printing function
    printlist(head);
    int sf,sl;
    printf("Enter value for inserting in first:");
    scanf("%d",&sf);
    ///printf("%d", sf);
    insertfirst(head,sf);
    printf("Enter value for inserting in last:");
    scanf("%d",&sl);
    ///printf("%d", sl);
    insertlast(head,sl);
    int vala,new_vala;
    printf("Enter the value you want that is before new value:");
    scanf("%d",&vala);
    printf("Enter value for inserting in in position:");
    scanf("%d",&new_vala);
    ///printf("%d", sl);
    insertany(head,vala,new_vala);















}
